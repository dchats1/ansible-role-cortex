---
- name: Create Cortex config directory
  file:
    path: '{{ cortex_base_dir }}/cortex-config/'
    mode: '0775'
    state: directory

- name: Create Ingester WAL volumes
  containers.podman.podman_volume:
    state: present
    name: 'cortex-ingester-wal-{{ item }}-volume'
    label:
      app: cortex
  when: cortex_ingesters_with_wal|bool == True
  loop: '{{ range(0, cortex_ingester_replicas)|list }}'

- name: Create Ingester TSDB volume
  containers.podman.podman_volume:
    state: present
    name: 'cortex-ingester-tsdb-volume'
    label:
      app: cortex
  when: cortex_storage_engine == 'blocks'

- name: Create Ingester TSDB Sync volume
  containers.podman.podman_volume:
    state: present
    name: 'cortex-ingester-tsdb-sync-volume'
    label:
      app: cortex
  when: cortex_storage_engine == 'blocks'

- name: Create Compactor volume
  containers.podman.podman_volume:
    state: present
    name: 'cortex-ingester-tsdb-sync-volume'
    label:
      app: cortex
  when: cortex_storage_engine == 'blocks'

- name: Set Cortex conf file
  template:
    src: 'cortex.yaml'
    dest: '{{ cortex_base_dir }}/cortex-config/cortex.yaml'
    mode: '0644'
  register: cortex_conf

- set_fact:
    services_to_restart: '{{ services_to_restart + [ "container-cortex-ingester-" + item|string + ".service" ] }}'
  loop: '{{ range(0, cortex_ingester_replicas)|list }}'
  when: cortex_conf.changed

- set_fact:
    services_to_restart: '{{ services_to_restart + [ "container-cortex-distributor-" + item|string + ".service" ] }}'
  loop: '{{ range(0, cortex_distributor_replicas)|list }}'
  when: cortex_conf.changed

- set_fact:
    services_to_restart: '{{ services_to_restart + [ "container-cortex-table-manager.service" ] }}'
  when: cortex_conf.changed

- set_fact:
    services_to_restart: '{{ services_to_restart + [ "container-cortex-querier-" + item|string + ".service" ] }}'
  loop: '{{ range(0, cortex_querier_replicas)|list }}'
  when: cortex_conf.changed
