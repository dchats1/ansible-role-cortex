---
- set_fact:
    services_to_restart: []

- name: Create pid file directory for containers
  file:
    path: '{{ cortex_base_dir }}/pids/'
    state: directory

- include_tasks: etcd.yml
- include_tasks: cassandra.yml
  when: cortex_storage_engine == 'chunks'
- include_tasks: cortex.yml
- include_tasks: cortex-table-manager.yml
  when: cortex_storage_engine == 'chunks'
- include_tasks: cortex-compactor.yml
  when: cortex_storage_engine == 'blocks'
- include_tasks: cortex-store-gateway.yml
  when: cortex_storage_engine == 'blocks'
- include_tasks: cortex-distributors.yml
- include_tasks: cortex-ingesters.yml
- include_tasks: cortex-query-frontend.yml
- include_tasks: cortex-queriers.yml
- include_tasks: nginx.yml

- name: Open nginx port in firewalld
  firewalld:
    port: '{{ cortex_nginx_listen_port }}/tcp'
    permanent: yes
    state: enabled
    immediate: yes
  when: cortex_manage_firewalld and cortex_frontend_podman_network == "host"

- debug:
    msg: 'Services to restart: {{ services_to_restart }}'

- name: daemon-reload
  systemd:
    daemon-reload: yes
  when: services_to_restart | length > 0

- name: Restart Service(s)
  systemd:
    name: '{{ item }}'
    state: restarted
  loop: '{{ services_to_restart }}'

- name: Get Load Balancer IP
  containers.podman.podman_container_info:
    name:  cortex-loadbalancer
  register: loadbalancer_info

- set_fact:
    cortex_loadbalancer_ip: '{{ loadbalancer_info.containers[0].NetworkSettings.IPAddress }}'

- debug:
    msg: 'Cortex Load Balancer IP: {{ cortex_loadbalancer_ip }}'
